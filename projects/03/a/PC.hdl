// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    // Put DFFs to get(t-1) values
    DFF(in=reset, out=t-1reset);
    DFF(in=load, out=t-1load);
    DFF(in=inc, out=t-1inc);

    DFF16(in=in, out=t-1in);

    To16(sel=t-1reset, out=t-1reset16);
    To16(sel=false, out=false16);
    And16(a=t-1reset16, b=false16, out=outreset);

    To16(sel=t-1load, out=t-1load16);
    And16(a=t-1load16, b=t-1in, out=outload);

    To16(sel=inc, out=inc16);
    Inc16(in=lastout, out=t-1outinced);
    And16(a=t-1outinced, b=inc16, out=outinc);

    // conclude
    And16(a=outreset, b=outload, out=tmp);
    And16(a=outinc, b=tmp, out=outforDFF16);

    DFF16(in=outforDFF16, out=lastout, out=out);
}
